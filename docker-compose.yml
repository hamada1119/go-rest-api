version: "3.8"
services:
  dev-postgres:
    image: postgres:15.1-alpine
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    networks:
      - lesson
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  go-app:
    image: ryota1119/go-app:latest
    ports:
      - "4040:8080"
    depends_on:
      dev-postgres:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./.env:/app/.env:ro
    networks:
      - lesson
    command: ["/bin/sh", "-c", "/app/wait-for-it.sh dev-postgres:5432 -- ./main"]
  
  migrate:
    build: .
    command: go run migrate/migrate.go
    env_file:
      - .env
    depends_on:
      dev-postgres:
        condition: service_healthy
    networks:
      - lesson
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certbot/conf:/etc/letsencrypt:ro
      - ./nginx/certbot/www:/var/www/certbot:ro
    depends_on:
      - go-app
    networks:
      - lesson

  certbot:
    image: certbot/certbot
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/log:/var/log/letsencrypt
      - ./nginx/certbot/lib:/var/lib/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 24h & wait $${!}; done;'"
    networks:
      - lesson

networks:
  lesson: