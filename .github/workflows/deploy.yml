name: Deploy Go Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: [self-hosted]

    steps:
      - name: Make certbot dir writable
        run: sudo chown -R ec2-user:ec2-user ./go-rest-api/go-rest-api/nginx/certbot/conf || true

      - name: Checkout Source 
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PW=${{ secrets.POSTGRES_PW }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PW }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "SECRET=${{ secrets.SECRET }}" >> .env
          echo "GO_ENV=${{ secrets.GO_ENV }}" >> .env
          echo "API_DOMAIN=${{ secrets.API_DOMAIN }}" >> .env
          echo "FE_URL=${{ secrets.FE_URL }}" >> .env
          echo "UID=${{ secrets.UID }}" >> .env
          echo "GID=${{ secrets.GID }}" >> .env

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME  }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ryota1119/go-app .

      - name: Push Docker image
        run: docker push ryota1119/go-app

      - name: Free up disk space
        run: |
          docker system prune -af
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

  deploy:
    needs: build
    runs-on: [self-hosted]

    steps:
      - name: Pull latest image
        run: docker pull ryota1119/go-app:latest

      - name: Stop and remove existing containers
        run: docker compose down || true

      - name: Start containers with docker-compose
        run: docker-compose up -d --remove-orphans
