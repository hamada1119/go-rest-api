name: Deploy Go Application

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: [self-hosted]
    steps:
      - name: Fix certbot perms before checkout
        run: |
          sudo chown -R ec2-user:ec2-user /home/ec2-user/actions-runner/_work/go-rest-api/go-rest-api/nginx/certbot || true
          sudo chmod -R u+rwX,g+rwX,o+rwX /home/ec2-user/actions-runner/_work/go-rest-api/go-rest-api/nginx/certbot || true

      - name: Make pg-data removable before checkout
        run: |
          sudo chattr -i ./pg-data 2>/dev/null || true
          sudo chown -R ec2-user:ec2-user ./pg-data 2>/dev/null || true
          sudo rm -rf ./pg-data || true

      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Detect changes in backend
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'go.mod'
              - 'go.sum'
              - 'main.go'
              - 'controller/**'
              - 'db/**'
              - 'migrate/**'
              - 'model/**'
              - 'repository/**'
              - 'router/**'
              - 'usecase/**'
              - 'validator/**'
              - 'Dockerfile'

      - name: Build & Push with cache
        if: steps.changes.outputs.backend == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ryota1119/go-app:latest
            ryota1119/go-app:${{ github.sha }}
          cache-from: type=registry,ref=ryota1119/go-app:cache
          cache-to: type=registry,ref=ryota1119/go-app:cache,mode=max

  deploy:
    needs: build
    runs-on: [self-hosted]
    
    defaults:
      run:
        working-directory: ${{ github.workspace }}  
    
    steps:
      - name: Fix certbot perms before checkout
        run: |
          sudo chown -R ec2-user:ec2-user ./nginx/certbot || true
          sudo chmod -R u+rwX,g+rwX,o+rwX ./nginx/certbot || true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure certbot dirs
        run: |
          mkdir -p ./nginx/certbot/conf ./nginx/certbot/www ./nginx/certbot/log ./nginx/certbot/lib
          sudo chown -R ec2-user:ec2-user ./nginx/certbot
          chmod -R 775 ./nginx/certbot

      - name: Create .env for runtime
        run: |
          cat > .env <<EOF
          PORT=${{ secrets.PORT }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          SECRET=${{ secrets.SECRET }}
          GO_ENV=${{ secrets.GO_ENV }}
          API_DOMAIN=${{ secrets.API_DOMAIN }}  
          FE_URL=${{ secrets.FE_URL }}
          UID=${{ secrets.UID }}
          GID=${{ secrets.GID }}
          EOF
      
      - name: Pull latest image if not present
        run: |
          if ! docker image inspect ryota1119/go-app:latest > /dev/null 2>&1; then
          docker pull ryota1119/go-app:latest
          else
          echo "Image already exists locally. Skipping pull."
          fi
      
      - name: Stop stack
        run: docker-compose down || true

      - name: Start stack
        run: docker-compose up -d --remove-orphans